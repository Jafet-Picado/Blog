@model IEnumerable<Blog.Models.BlogPost>

@{
    ViewData["Title"] = "Index";
    var pageSize = 5; // Cantidad de elementos por página
    var pageCount = (int)Math.Ceiling((double)Model.Count() / pageSize);
}

<div class="container-fluid">
    <div class="row">
        <div class="col-2"></div>
        <div class="col-8">
            @for (int i = 0; i < pageCount; i++)
            {
                <div class="row">
                    <div class="col-12 col-md-9">
                        @foreach (var item in Model.Skip(i * pageSize).Take(pageSize))
                        {
                                var base64String = Convert.ToBase64String(item.Image);
                                var imageSource = $"data:image/jpeg;base64,{base64String}";
                                <h3 class="h3">@item.Title <small class="small">@item.CreatedAt.ToString("dd/MM/yyyy")</small></h3>
                                <img src="@imageSource" alt="Post Image" class="index-image" style="width: 850px;" />
                                @if (item.Content.Length > 300)
                                {
                                    <p class="p-content">@Html.Raw(Html.Encode(item.Content.Substring(0, 300)))... <a href="@Url.Action("Details", "BlogPosts", new { id = item.Id })" class="ver-mas-btn"> Ver más</a></p>
                                }
                                else
                                {
                                    <p class="p-content">@Html.Raw(Html.Encode(item.Content))</p>
                                }
                                <div class="box">
                                @if(item.Author is not null){
                                    <p>Autor: <a href="/BlogPosts/PostsByAuthor/@item.AuthorId">@item.Author.FirstName @item.Author.LastName</a></p>
                                }
                                else
                                {
                                    <p>Autor: Desconocido</p>
                                }

                                </div>
                                <div style="margin-bottom: 30px;"></div>
                        }
                    </div>
                    <div class="col-12 col-md-3">
                        <h2>Sección 2</h2>
                        <p>Contenido de la sección 2.</p>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-12">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            @for (int i = 1; i <= ViewBag.PageCount; i++)
                            {
                                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <div class="col-2"></div>
    </div>
</div>


@section scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function fetchCategories() {

                fetch('/Categories/GetAllCategories')
                    .then(response => response.json())
                    .then(categories => {
                        const container = document.getElementById('listOfCategories');
                        container.innerHTML = '';
                        container.classList.add('list-group')
                        categories.forEach(category => {
                            const item = document.createElement('a');
                            item.classList.add('list-group-item', 'list-group-item-action');
                            item.textContent = category.name;
                            item.href = `/BlogPosts/PostsByCategory/${category.id}`;
                            container.appendChild(item);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading categories: ', error);
                    })
            }

            function fetchAuthors() {
                const container = document.getElementById('listOfAuthors');
                container.innerHTML = '';
                container.classList.add('list-group');

                fetch('/BlogPosts/GetAllAuthors')
                    .then(response => response.json())
                    .then(authors => {
                        authors.forEach(author => {
                            const item = document.createElement('a');
                            item.classList.add('list-group-item', 'list-group-item-action');
                            item.textContent = author.name;
                            item.href = `/BlogPosts/PostsByAuthor/${author.id}`;
                            container.appendChild(item);
                        });
                    })
                    .catch(error => {
                        console.error('Error loading categories: ', error);
                    })
            }

            fetchCategories();
        });
    </script>
}